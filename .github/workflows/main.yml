# name: Deploy React App

# on:
#   push:
#     branches:
#       - main  # runs when you push to main

# jobs:
#   build-and-deploy:
#     runs-on: self-hosted

#     steps:
#       # 1️⃣ Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v5

#       # 2️⃣ Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v5
#         with:
#           node-version: '22'

#       # 3️⃣ Install dependencies
#       - name: Install dependencies
#         run: |
#           node -v
#           which node
#           npm install

#       # 4️⃣ Build project
#       - name: Build project
#         run: npm run build
        
#       - name: check ls status
#         run: |
#           echo "###############| copy to dest |####################"
#           sudo rsync -av --delete dist/ /var/www/demo-react/
#           echo "#####################################"
#           sudo chown -R root:root /var/www/demo-react
#           ls -la /var/www/demo-react
        

      # 5️⃣ Upload to EC2 as normal user into a temp folder
      # - name: Upload build to temp folder
      #   uses: burnett01/rsync-deployments@7.1.0
      #   with:
      #     switches: -avz --delete
      #     path: dist/
      #     remote_path: /var/www/demo-react/
      #     remote_host: ${{ secrets.EC2_HOST }}
      #     remote_user: ${{ secrets.EC2_USER }}
      #     remote_key: ${{ secrets.EC2_SSH_KEY }}


      # # 6️⃣ Move files to /var/www/demo-react with sudo (keeps root:root)
      # - name: Move to /var/www/demo-react with sudo
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo mkdir -p /var/www/demo-react
      #       sudo rsync -avz --delete /tmp/deploy/ /var/www/demo-react/
      #       sudo rm -rf /tmp/deploy


# name: Deploy React App to EC2 via RSYNC

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main
    

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1️⃣ Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # 2️⃣ Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '22'
#           cache: 'npm'

#       # 3️⃣ Install dependencies
#       - name: Install dependencies
#         run: npm install

#       # 4️⃣ Build project
#       - name: Build project
#         run: npm run build

#       # 5️⃣ Setup SSH key
#       - name: Setup SSH key
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

#       # 6️⃣ Deploy using RSYNC to temp directory first
#       - name: Deploy with RSYNC
#         run: |
#           # Deploy to user's home directory first (has write permissions)
#           rsync -avz --delete \
#             -e "ssh -o StrictHostKeyChecking=no" \
#             ./dist/ \
#             ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/react-build/  

#       # 7️⃣ Move files and set permissions
#       - name: Move files and set permissions
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#             # Backup current deployment (optional)
#             sudo cp -r /var/www/demo-react /var/www/demo-react-backup-$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
            
#             # Remove old files
#             sudo rm -rf /var/www/demo-react/*
            
#             # Copy new files from home directory to web directory
#             sudo cp -r ~/react-build/* /var/www/demo-react/
            
#             # Set proper ownership and permissions
#             sudo chown -R www-data:www-data /var/www/demo-react
#             sudo chmod -R 755 /var/www/demo-react
            
#             # Clean up temp directory
#             rm -rf ~/react-build
            
#             # Restart web server
#             sudo systemctl reload nginx || sudo systemctl reload apache2 || true
            
#             echo "Deployment completed successfully!"
#           EOF



# name: Deploy React App to EC2 via RSYNC Action

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1️⃣ Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # 2️⃣ Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '22'
#           cache: 'npm'

#       # 3️⃣ Install dependencies
#       - name: Install dependencies
#         run: npm install

#       # 4️⃣ Build project
#       - name: Build project
#         run: npm run build

#       # 5️⃣ Setup SSH key
#       - name: Setup SSH key
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

#       # 6️⃣ Deploy using rsync-deploy Action
#       - name: Deploy using rsync-deploy
#         uses: burnett01/rsync-deployments@5.2
#         with:
#           switches: -avzr --delete
#           path: dist/
#           remote_path: /var/www/demo-react/
#           remote_host: ${{ secrets.EC2_HOST }}
#           remote_user: ${{ secrets.EC2_USER }}
#           remote_key: ${{ secrets.EC2_SSH_KEY }}

#       # 7️⃣ Move files and set permissions
#       - name: Set permissions and reload server
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#             # Set proper ownership and permissions
#             sudo chown -R www-data:www-data /var/www/demo-react
#             sudo chmod -R 755 /var/www/demo-react
            
#             # Restart web server
#             sudo systemctl reload nginx || sudo systemctl reload apache2 || true
            
#             echo "Deployment completed successfully!"
#           EOF




name: Deploy React App to EC2 with rsync

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          npm install
          pwd          

      - name: Trivy scan (CRITICAL & HIGH)
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.18.3
          trivy fs ./ --format table

      - name: Upload Trivy Report (Artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Build React app
        run: npm run build
      
      - name: set-dev-main path
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "Deploying to development environment"
            echo "REMOTE_PATH=/home/frontend/dev" >> $GITHUB_ENV
          else
            echo "Deploying to main environment"
            echo "REMOTE_PATH=/home/frontend/dist" >> $GITHUB_ENV
          fi

      - name: Deploy with rsync
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avz --delete
          path: dist/
          remote_path: ${{ env.REMOTE_PATH }}
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - name: Reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl reload nginx
